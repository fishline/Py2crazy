Disassembling top-level module in ./opt-v3-tests/dict_test.txt
  1       0 BUILD_MAP            x = [43m[30m{[39m[49m1 : 2}
          3 LOAD_CONST           x = {1 : [43m[30m2[39m[49m}
          6 LOAD_CONST           x = {[43m[30m1[39m[49m : 2}
          9 STORE_MAP            x = [43m[30m{[39m[49m1 : 2}
         10 STORE_NAME           [43m[30mx[39m[49m = {1 : 2}

  2      13 LOAD_NAME            x[('tup', 'le')] = [43m[30mset[39m[49m([1, 2, 3])
         16 LOAD_CONST           x[('tup', 'le')] = set([[43m[30m1[39m[49m, 2, 3])
         19 LOAD_CONST           x[('tup', 'le')] = set([1, [43m[30m2[39m[49m, 3])
         22 LOAD_CONST           x[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         25 BUILD_LIST           x[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         28 CALL_FUNCTION        x[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         31 LOAD_NAME            [43m[30mx[39m[49m[('tup', 'le')] = set([1, 2, 3])
         34 LOAD_CONST           x[([43m[30m'tup'[39m[49m, 'le')] = set([1, 2, 3])
         37 LOAD_CONST           x[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])
         40 BUILD_TUPLE          x[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])
         43 STORE_SUBSCR         x[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])

  4      44 LOAD_CONST           [43m[30mdef[39m[49m foo():
         47 MAKE_FUNCTION        [43m[30mdef[39m[49m foo():
         50 STORE_NAME           [43m[30mdef[39m[49m foo():

 10      53 LOAD_NAME            [43m[30mfoo[39m[49m()
         56 CALL_FUNCTION        [43m[30mfoo[39m[49m()
         59 POP_TOP              [43m[30mfoo[39m[49m()
         60 LOAD_CONST           [43m[30mfoo[39m[49m()
         63 RETURN_VALUE         [43m[30mfoo[39m[49m()

Disassembling function foo
  5       0 BUILD_MAP              local_x = [43m[30m{[39m[49m1 : 2}
          3 LOAD_CONST             local_x = {1 : [43m[30m2[39m[49m}
          6 LOAD_CONST             local_x = {[43m[30m1[39m[49m : 2}
          9 STORE_MAP              local_x = [43m[30m{[39m[49m1 : 2}
         10 STORE_FAST             [43m[30mlocal_x[39m[49m = {1 : 2}

  6      13 BUILD_MAP              local_y = [43m[30m{[39m[49m}
         16 STORE_FAST             [43m[30mlocal_y[39m[49m = {}

  7      19 LOAD_GLOBAL            local_y[('tup', 'le')] = [43m[30mset[39m[49m([1, 2, 3])
         22 LOAD_CONST             local_y[('tup', 'le')] = set([[43m[30m1[39m[49m, 2, 3])
         25 LOAD_CONST             local_y[('tup', 'le')] = set([1, [43m[30m2[39m[49m, 3])
         28 LOAD_CONST             local_y[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         31 BUILD_LIST             local_y[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         34 CALL_FUNCTION          local_y[('tup', 'le')] = set([1, 2, [43m[30m3[39m[49m])
         37 LOAD_FAST              [43m[30mlocal_y[39m[49m[('tup', 'le')] = set([1, 2, 3])
         40 LOAD_CONST             local_y[([43m[30m'tup'[39m[49m, 'le')] = set([1, 2, 3])
         43 LOAD_CONST             local_y[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])
         46 BUILD_TUPLE            local_y[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])
         49 STORE_SUBSCR           local_y[('tup', [43m[30m'le'[39m[49m)] = set([1, 2, 3])

  8      50 LOAD_CONST             print([43m[30m"hello"[39m[49m, list(local_y.values()))
         53 LOAD_GLOBAL            print("hello", [43m[30mlist[39m[49m(local_y.values()))
         56 LOAD_FAST              print("hello", list([43m[30mlocal_y[39m[49m.values()))
         59 LOAD_ATTR              print("hello", list(local_y[43m[30m.values[39m[49m()))
         62 CALL_FUNCTION          print("hello", list(local_y[43m[30m.values[39m[49m()))
         65 CALL_FUNCTION          print("hello", list(local_y[43m[30m.values[39m[49m()))
         68 BUILD_TUPLE            print("hello", list(local_y[43m[30m.values[39m[49m()))
         71 PRINT_ITEM             print("hello", list(local_y[43m[30m.values[39m[49m()))
         72 PRINT_NEWLINE          print("hello", list(local_y[43m[30m.values[39m[49m()))
         73 LOAD_CONST             print("hello", list(local_y[43m[30m.values[39m[49m()))
         76 RETURN_VALUE           print("hello", list(local_y[43m[30m.values[39m[49m()))
