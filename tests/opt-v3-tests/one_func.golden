Disassembling top-level module in ./opt-v3-tests/one_func.txt
  1       0 LOAD_CONST           [43m[30mdef[39m[49m add(a, b, c):
          3 MAKE_FUNCTION        [43m[30mdef[39m[49m add(a, b, c):
          6 STORE_NAME           [43m[30mdef[39m[49m add(a, b, c):

  5       9 LOAD_CONST           x = [43m[30m5[39m[49m
         12 STORE_NAME           [43m[30mx[39m[49m = 5

  6      15 LOAD_CONST           y = [43m[30m10[39m[49m
         18 STORE_NAME           [43m[30my[39m[49m = 10

  7      21 LOAD_NAME            z = [43m[30mx[39m[49m * y
         24 LOAD_NAME            z = x * [43m[30my[39m[49m
         27 BINARY_MULTIPLY      z = [43m[30mx * y[39m[49m
         28 STORE_NAME           [43m[30mz[39m[49m = x * y

  8      31 LOAD_NAME            print([43m[30madd[39m[49m(x, y, z))
         34 LOAD_NAME            print(add([43m[30mx[39m[49m, y, z))
         37 LOAD_NAME            print(add(x, [43m[30my[39m[49m, z))
         40 LOAD_NAME            print(add(x, y, [43m[30mz[39m[49m))
         43 CALL_FUNCTION        print([43m[30madd(x, y, z)[39m[49m)
         46 PRINT_ITEM           print([43m[30madd(x, y, z)[39m[49m)
         47 PRINT_NEWLINE        print([43m[30madd(x, y, z)[39m[49m)
         48 LOAD_CONST           print([43m[30madd(x, y, z)[39m[49m)
         51 RETURN_VALUE         print([43m[30madd(x, y, z)[39m[49m)

Disassembling function add
  2       0 LOAD_FAST              d = [43m[30ma[39m[49m + b
          3 LOAD_FAST              d = a + [43m[30mb[39m[49m
          6 BINARY_ADD             d = [43m[30ma + b[39m[49m
          7 STORE_FAST             [43m[30md[39m[49m = a + b

  3      10 LOAD_FAST              return [43m[30mc[39m[49m + d
         13 LOAD_FAST              return c + [43m[30md[39m[49m
         16 BINARY_ADD             return [43m[30mc + d[39m[49m
         17 RETURN_VALUE           return [43m[30mc + d[39m[49m
