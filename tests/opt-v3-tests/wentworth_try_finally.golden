Disassembling top-level module in ./opt-v3-tests/wentworth_try_finally.txt
  9       0 LOAD_CONST           [43m[30mdef[39m[49m f(n):
          3 MAKE_FUNCTION        [43m[30mdef[39m[49m f(n):
          6 STORE_NAME           [43m[30mdef[39m[49m f(n):

 18       9 LOAD_NAME            [43m[30mf[39m[49m(4)
         12 LOAD_CONST           f([43m[30m4[39m[49m)
         15 CALL_FUNCTION        f([43m[30m4[39m[49m)
         18 POP_TOP              f([43m[30m4[39m[49m)
         19 LOAD_CONST           f([43m[30m4[39m[49m)
         22 RETURN_VALUE         f([43m[30m4[39m[49m)

Disassembling function f
 10       0 SETUP_FINALLY            [43m[30mtry[39m[49m:

 11       3 LOAD_CONST                   x = [43m[30m10[39m[49m / n
          6 LOAD_FAST                    x = 10 / [43m[30mn[39m[49m
          9 BINARY_DIVIDE                x = [43m[30m10 / n[39m[49m
         10 STORE_FAST                   [43m[30mx[39m[49m = 10 / n

 12      13 LOAD_CONST                   print([43m[30m"x is "[39m[49m + str(x))
         16 LOAD_GLOBAL                  print("x is " + [43m[30mstr[39m[49m(x))
         19 LOAD_FAST                    print("x is " + str([43m[30mx[39m[49m))
         22 CALL_FUNCTION                print("x is " + str([43m[30mx[39m[49m))
         25 BINARY_ADD                   print([43m[30m"x is " + str(x)[39m[49m)
         26 PRINT_ITEM                   print([43m[30m"x is " + str(x)[39m[49m)
         27 PRINT_NEWLINE                print([43m[30m"x is " + str(x)[39m[49m)

 13      28 LOAD_GLOBAL                  [43m[30mf[39m[49m(n-1)
         31 LOAD_FAST                    f([43m[30mn[39m[49m-1)
         34 LOAD_CONST                   f(n-[43m[30m1[39m[49m)
         37 BINARY_SUBTRACT              f([43m[30mn-1[39m[49m)
         38 CALL_FUNCTION                f([43m[30mn-1[39m[49m)
         41 POP_TOP                      f([43m[30mn-1[39m[49m)

 14      42 LOAD_CONST                   print([43m[30m"survived!"[39m[49m)
         45 PRINT_ITEM                   print([43m[30m"survived!"[39m[49m)
         46 PRINT_NEWLINE                print([43m[30m"survived!"[39m[49m)
         47 POP_BLOCK                    print([43m[30m"survived!"[39m[49m)
         48 LOAD_CONST                   print([43m[30m"survived!"[39m[49m)

 16 >>   51 LOAD_CONST                   print([43m[30m"Bye from f where n = "[39m[49m + str(n))
         54 LOAD_GLOBAL                  print("Bye from f where n = " + [43m[30mstr[39m[49m(n))
         57 LOAD_FAST                    print("Bye from f where n = " + str([43m[30mn[39m[49m))
         60 CALL_FUNCTION                print("Bye from f where n = " + str([43m[30mn[39m[49m))
         63 BINARY_ADD                   print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
         64 PRINT_ITEM                   print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
         65 PRINT_NEWLINE                print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
         66 END_FINALLY                  print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
         67 LOAD_CONST                   print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
         70 RETURN_VALUE                 print([43m[30m"Bye from f where n = " + str(n)[39m[49m)
