Disassembling top-level module in ./opt-v3-tests/oop_small.txt
  1       0 LOAD_CONST           [43m[30mclass[39m[49m A:
          3 BUILD_TUPLE          [43m[30mclass[39m[49m A:
          6 LOAD_CONST           [43m[30mclass[39m[49m A:
          9 MAKE_FUNCTION        [43m[30mclass[39m[49m A:
         12 CALL_FUNCTION        [43m[30mclass[39m[49m A:
         15 BUILD_CLASS          [43m[30mclass[39m[49m A:
         16 STORE_NAME           [43m[30mclass[39m[49m A:

  5      19 LOAD_CONST           [43m[30mclass[39m[49m B:
         22 BUILD_TUPLE          [43m[30mclass[39m[49m B:
         25 LOAD_CONST           [43m[30mclass[39m[49m B:
         28 MAKE_FUNCTION        [43m[30mclass[39m[49m B:
         31 CALL_FUNCTION        [43m[30mclass[39m[49m B:
         34 BUILD_CLASS          [43m[30mclass[39m[49m B:
         35 STORE_NAME           [43m[30mclass[39m[49m B:

  8      38 LOAD_CONST           [43m[30mclass[39m[49m C(A,B):
         41 LOAD_NAME            class C([43m[30mA[39m[49m,B):
         44 LOAD_NAME            class C(A,[43m[30mB[39m[49m):
         47 BUILD_TUPLE          class C(A,[43m[30mB[39m[49m):
         50 LOAD_CONST           class C(A,[43m[30mB[39m[49m):
         53 MAKE_FUNCTION        class C(A,[43m[30mB[39m[49m):
         56 CALL_FUNCTION        class C(A,[43m[30mB[39m[49m):
         59 BUILD_CLASS          class C(A,[43m[30mB[39m[49m):
         60 STORE_NAME           class C(A,[43m[30mB[39m[49m):

 12      63 LOAD_NAME            inst = [43m[30mC[39m[49m()
         66 CALL_FUNCTION        inst = [43m[30mC()[39m[49m
         69 STORE_NAME           [43m[30minst[39m[49m = C()

 13      72 LOAD_NAME            print([43m[30minst[39m[49m.salutation())
         75 LOAD_ATTR            print([43m[30minst.salutation[39m[49m())
         78 CALL_FUNCTION        print([43m[30minst.salutation()[39m[49m)
         81 PRINT_ITEM           print([43m[30minst.salutation()[39m[49m)
         82 PRINT_NEWLINE        print([43m[30minst.salutation()[39m[49m)

 14      83 LOAD_CONST           inst.x = [43m[30m100[39m[49m
         86 LOAD_NAME            [43m[30minst[39m[49m.x = 100
         89 STORE_ATTR           [43m[30minst.x[39m[49m = 100

 15      92 LOAD_NAME            print([43m[30minst[39m[49m.salutation())
         95 LOAD_ATTR            print([43m[30minst.salutation[39m[49m())
         98 CALL_FUNCTION        print([43m[30minst.salutation()[39m[49m)
        101 PRINT_ITEM           print([43m[30minst.salutation()[39m[49m)
        102 PRINT_NEWLINE        print([43m[30minst.salutation()[39m[49m)
        103 LOAD_CONST           print([43m[30minst.salutation()[39m[49m)
        106 RETURN_VALUE         print([43m[30minst.salutation()[39m[49m)

Disassembling function B
  5       0 LOAD_NAME            [43m[30mclass[39m[49m B:
          3 STORE_NAME           [43m[30mclass[39m[49m B:

  6       6 LOAD_CONST               z = [43m[30m'bye'[39m[49m
          9 STORE_NAME               [43m[30mz[39m[49m = 'bye'
         12 LOAD_LOCALS              [43m[30mz[39m[49m = 'bye'
         13 RETURN_VALUE             [43m[30mz[39m[49m = 'bye'

Disassembling function C
  8       0 LOAD_NAME            [43m[30mclass[39m[49m C(A,B):
          3 STORE_NAME           [43m[30mclass[39m[49m C(A,B):

  9       6 LOAD_CONST               [43m[30mdef[39m[49m salutation(self):
          9 MAKE_FUNCTION            [43m[30mdef[39m[49m salutation(self):
         12 STORE_NAME               [43m[30mdef[39m[49m salutation(self):
         15 LOAD_LOCALS              [43m[30mdef[39m[49m salutation(self):
         16 RETURN_VALUE             [43m[30mdef[39m[49m salutation(self):

Disassembling function salutation
 10       0 LOAD_CONST                   return [43m[30m'%d %s %s'[39m[49m % (self.x, self.y, self.z)
          3 LOAD_FAST                    return '%d %s %s' % ([43m[30mself[39m[49m.x, self.y, self.z)
          6 LOAD_ATTR                    return '%d %s %s' % ([43m[30mself.x[39m[49m, self.y, self.z)
          9 LOAD_FAST                    return '%d %s %s' % (self.x, [43m[30mself[39m[49m.y, self.z)
         12 LOAD_ATTR                    return '%d %s %s' % (self.x, [43m[30mself.y[39m[49m, self.z)
         15 LOAD_FAST                    return '%d %s %s' % (self.x, self.y, [43m[30mself[39m[49m.z)
         18 LOAD_ATTR                    return '%d %s %s' % (self.x, self.y, [43m[30mself.z[39m[49m)
         21 BUILD_TUPLE                  return '%d %s %s' % [43m[30m(self.x, self.y, self.z)[39m[49m
         24 BINARY_MODULO                return [43m[30m'%d %s %s' % (self.x, self.y, self.z)[39m[49m
         25 RETURN_VALUE                 return [43m[30m'%d %s %s' % (self.x, self.y, self.z)[39m[49m

Disassembling function A
  1       0 LOAD_NAME            [43m[30mclass[39m[49m A:
          3 STORE_NAME           [43m[30mclass[39m[49m A:

  2       6 LOAD_CONST               x = [43m[30m1[39m[49m
          9 STORE_NAME               [43m[30mx[39m[49m = 1

  3      12 LOAD_CONST               y = [43m[30m'hello'[39m[49m
         15 STORE_NAME               [43m[30my[39m[49m = 'hello'
         18 LOAD_LOCALS              [43m[30my[39m[49m = 'hello'
         19 RETURN_VALUE             [43m[30my[39m[49m = 'hello'
