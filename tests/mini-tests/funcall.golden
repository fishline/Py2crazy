Disassembling top-level module in ./mini-tests/funcall.txt
  1       0 LOAD_NAME            one = [43m[30mcall_foo[39m[49m(1 + 2, y, z+w-2)
          3 LOAD_CONST           one = call_foo([43m[30m1[39m[49m + 2, y, z+w-2)
          6 LOAD_CONST           one = call_foo(1 + [43m[30m2[39m[49m, y, z+w-2)
          9 BINARY_ADD           one = call_foo([43m[30m1 + 2[39m[49m, y, z+w-2)
         10 LOAD_NAME            one = call_foo(1 + 2, [43m[30my[39m[49m, z+w-2)
         13 LOAD_NAME            one = call_foo(1 + 2, y, [43m[30mz[39m[49m+w-2)
         16 LOAD_NAME            one = call_foo(1 + 2, y, z+[43m[30mw[39m[49m-2)
         19 BINARY_ADD           one = call_foo(1 + 2, y, [43m[30mz+w[39m[49m-2)
         20 LOAD_CONST           one = call_foo(1 + 2, y, z+w-[43m[30m2[39m[49m)
         23 BINARY_SUBTRACT      one = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m)
         24 CALL_FUNCTION        one = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m)
         27 STORE_NAME           [43m[30mone[39m[49m = call_foo(1 + 2, y, z+w-2)

  2      30 LOAD_NAME            two = [43m[30mcall_foo[39m[49m(1 + 2, y, z+w-2, optional1=True, optional2=two/one+four)
         33 LOAD_CONST           two = call_foo([43m[30m1[39m[49m + 2, y, z+w-2, optional1=True, optional2=two/one+four)
         36 LOAD_CONST           two = call_foo(1 + [43m[30m2[39m[49m, y, z+w-2, optional1=True, optional2=two/one+four)
         39 BINARY_ADD           two = call_foo([43m[30m1 + 2[39m[49m, y, z+w-2, optional1=True, optional2=two/one+four)
         40 LOAD_NAME            two = call_foo(1 + 2, [43m[30my[39m[49m, z+w-2, optional1=True, optional2=two/one+four)
         43 LOAD_NAME            two = call_foo(1 + 2, y, [43m[30mz[39m[49m+w-2, optional1=True, optional2=two/one+four)
         46 LOAD_NAME            two = call_foo(1 + 2, y, z+[43m[30mw[39m[49m-2, optional1=True, optional2=two/one+four)
         49 BINARY_ADD           two = call_foo(1 + 2, y, [43m[30mz+w[39m[49m-2, optional1=True, optional2=two/one+four)
         50 LOAD_CONST           two = call_foo(1 + 2, y, z+w-[43m[30m2[39m[49m, optional1=True, optional2=two/one+four)
         53 BINARY_SUBTRACT      two = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, optional2=two/one+four)
         54 LOAD_CONST           two = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, optional2=two/one+four)
         57 LOAD_NAME            two = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, optional2=two/one+four)
         60 LOAD_CONST           two = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, optional2=two/one+four)
         63 LOAD_NAME            two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=[43m[30mtwo[39m[49m/one+four)
         66 LOAD_NAME            two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=two/[43m[30mone[39m[49m+four)
         69 BINARY_DIVIDE        two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=[43m[30mtwo/one[39m[49m+four)
         70 LOAD_NAME            two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=two/one+[43m[30mfour[39m[49m)
         73 BINARY_ADD           two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=[43m[30mtwo/one+four[39m[49m)
         74 CALL_FUNCTION        two = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=[43m[30mtwo/one+four[39m[49m)
         77 STORE_NAME           [43m[30mtwo[39m[49m = call_foo(1 + 2, y, z+w-2, optional1=True, optional2=two/one+four)

  3      80 LOAD_NAME            three = [43m[30mcall_foo[39m[49m(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four)
         83 LOAD_CONST           three = call_foo([43m[30m1[39m[49m + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four)
         86 LOAD_CONST           three = call_foo(1 + [43m[30m2[39m[49m, y, z+w-2, optional1=True, *stararg, optional2=two/one+four)
         89 BINARY_ADD           three = call_foo([43m[30m1 + 2[39m[49m, y, z+w-2, optional1=True, *stararg, optional2=two/one+four)
         90 LOAD_NAME            three = call_foo(1 + 2, [43m[30my[39m[49m, z+w-2, optional1=True, *stararg, optional2=two/one+four)
         93 LOAD_NAME            three = call_foo(1 + 2, y, [43m[30mz[39m[49m+w-2, optional1=True, *stararg, optional2=two/one+four)
         96 LOAD_NAME            three = call_foo(1 + 2, y, z+[43m[30mw[39m[49m-2, optional1=True, *stararg, optional2=two/one+four)
         99 BINARY_ADD           three = call_foo(1 + 2, y, [43m[30mz+w[39m[49m-2, optional1=True, *stararg, optional2=two/one+four)
        100 LOAD_CONST           three = call_foo(1 + 2, y, z+w-[43m[30m2[39m[49m, optional1=True, *stararg, optional2=two/one+four)
        103 BINARY_SUBTRACT      three = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, *stararg, optional2=two/one+four)
        104 LOAD_CONST           three = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, *stararg, optional2=two/one+four)
        107 LOAD_NAME            three = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, *stararg, optional2=two/one+four)
        110 LOAD_CONST           three = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, *stararg, optional2=two/one+four)
        113 LOAD_NAME            three = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo[39m[49m/one+four)
        116 LOAD_NAME            three = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/[43m[30mone[39m[49m+four)
        119 BINARY_DIVIDE        three = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo/one[39m[49m+four)
        120 LOAD_NAME            three = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+[43m[30mfour[39m[49m)
        123 BINARY_ADD           three = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo/one+four[39m[49m)
        124 LOAD_NAME            three = call_foo(1 + 2, y, z+w-2, optional1=True, *[43m[30mstararg[39m[49m, optional2=two/one+four)
        127 CALL_FUNCTION_VAR    three = call_foo(1 + 2, y, z+w-2, optional1=True, *[43m[30mstararg[39m[49m, optional2=two/one+four)
        130 STORE_NAME           [43m[30mthree[39m[49m = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four)

  4     133 LOAD_NAME            four = [43m[30mcall_foo[39m[49m(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        136 LOAD_CONST           four = call_foo([43m[30m1[39m[49m + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        139 LOAD_CONST           four = call_foo(1 + [43m[30m2[39m[49m, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        142 BINARY_ADD           four = call_foo([43m[30m1 + 2[39m[49m, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        143 LOAD_NAME            four = call_foo(1 + 2, [43m[30my[39m[49m, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        146 LOAD_NAME            four = call_foo(1 + 2, y, [43m[30mz[39m[49m+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        149 LOAD_NAME            four = call_foo(1 + 2, y, z+[43m[30mw[39m[49m-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        152 BINARY_ADD           four = call_foo(1 + 2, y, [43m[30mz+w[39m[49m-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        153 LOAD_CONST           four = call_foo(1 + 2, y, z+w-[43m[30m2[39m[49m, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        156 BINARY_SUBTRACT      four = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        157 LOAD_CONST           four = call_foo(1 + 2, y, [43m[30mz+w-2[39m[49m, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        160 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, *stararg, optional2=two/one+four, **my_kwargs)
        163 LOAD_CONST           four = call_foo(1 + 2, y, z+w-2, optional1=[43m[30mTrue[39m[49m, *stararg, optional2=two/one+four, **my_kwargs)
        166 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo[39m[49m/one+four, **my_kwargs)
        169 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/[43m[30mone[39m[49m+four, **my_kwargs)
        172 BINARY_DIVIDE        four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo/one[39m[49m+four, **my_kwargs)
        173 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+[43m[30mfour[39m[49m, **my_kwargs)
        176 BINARY_ADD           four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=[43m[30mtwo/one+four[39m[49m, **my_kwargs)
        177 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=True, *[43m[30mstararg[39m[49m, optional2=two/one+four, **my_kwargs)
        180 LOAD_NAME            four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **[43m[30mmy_kwargs[39m[49m)
        183 CALL_FUNCTION_VAR_KW four = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **[43m[30mmy_kwargs[39m[49m)
        186 STORE_NAME           [43m[30mfour[39m[49m = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        189 LOAD_CONST           [43m[30mfour[39m[49m = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
        192 RETURN_VALUE         [43m[30mfour[39m[49m = call_foo(1 + 2, y, z+w-2, optional1=True, *stararg, optional2=two/one+four, **my_kwargs)
